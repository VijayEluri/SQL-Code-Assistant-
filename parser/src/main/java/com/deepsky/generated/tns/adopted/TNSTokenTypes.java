// $ANTLR 2.7.5 (20050128): "tnsnames_ex.g" -> "TNSLexerAdopted.java"$

package com.deepsky.generated.tns.adopted;

public interface TNSTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int START_RULE = 4;
	int NET_SERVICE_DESC = 5;
	int ERROR_TOKEN_A = 6;
	int NETWORK_ALIAS = 7;
	int DESCRIPTION_LIST = 8;
	int DESCRIPTION = 9;
	int ADDRESS = 10;
	int ADDRESS_ELEMENT = 11;
	int HOST_ADDRESS = 12;
	int EQ = 13;
	int OPEN_PAREN = 14;
	int LITERAL_description_list = 15;
	int CLOSE_PAREN = 16;
	int LITERAL_description = 17;
	int LITERAL_connect_data = 18;
	int LITERAL_type_of_service = 19;
	int IDENTIFIER = 20;
	int SERVICE_NAME = 21;
	int LITERAL_enable = 22;
	int LITERAL_broken = 23;
	int LITERAL_source_route = 24;
	int LITERAL_yes = 25;
	int LITERAL_no = 26;
	int LITERAL_on = 27;
	int LITERAL_off = 28;
	int LITERAL_load_balance = 29;
	int LITERAL_true = 30;
	int LITERAL_false = 31;
	int LITERAL_failover = 32;
	int LITERAL_recv_buf_size = 33;
	int NUMBER = 34;
	int LITERAL_send_buf_size = 35;
	int LITERAL_sdu = 36;
	int LITERAL_address_list = 37;
	int LITERAL_address = 38;
	int LITERAL_protocol = 39;
	int LITERAL_community = 40;
	int LITERAL_program = 41;
	// "argv0" = 42
	int LITERAL_args = 43;
	int QUOTED_STRING = 44;
	int LITERAL_host = 45;
	int LITERAL_port = 46;
	int LITERAL_service = 47;
	int LITERAL_key = 48;
	int DOT = 49;
	int LITERAL_service_name = 50;
	int LITERAL_instance_name = 51;
	int LITERAL_global_name = 52;
	int LITERAL_server = 53;
	int LITERAL_dedicated = 54;
	int LITERAL_shared = 55;
	int LITERAL_pooled = 56;
	int LITERAL_sid = 57;
	int LITERAL_hs = 58;
	int LITERAL_ok = 59;
	int LITERAL_presentation = 60;
	int LITERAL_security = 61;
	int LITERAL_ssl_server_cert_dn = 62;
	int STRING_LITERAL = 63;
	int BAD_ML_COMMENT = 64;
	int BAD_CHARACTER = 65;
	int BAD_CHAR_LITERAL = 66;
	int ANY_CHARACTER = 67;
	int SEMI = 68;
	int COLON = 69;
	int COMMA = 70;
	int SHARP = 71;
	int ASTERISK = 72;
	int AT_SIGN = 73;
	int OPEN_BRACK = 74;
	int CLOSE_BRACK = 75;
	int PLUS = 76;
	int MINUS = 77;
	int DIVIDE = 78;
	int PERCENTAGE = 79;
	int DOUBLEDOT = 80;
	int CONCAT = 81;
	int OUTER_JOIN = 82;
	int START_LABEL = 83;
	int END_LABEL = 84;
	int ASSIGNMENT_EQ = 85;
	int PASS_BY_NAME = 86;
	int VERTBAR = 87;
	int N = 88;
	int ESC = 89;
	int HEX_DIGIT = 90;
	int WS = 91;
	int LF = 92;
	int SL_COMMENT = 93;
	int ML_COMMENT = 94;
}
