// $ANTLR 2.7.5 (20050128): "plsql_parser.g" -> "PLSqlParser.java"$

package com.deepsky.generated.plsql;

public interface PLSqlTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int BAD_ML_COMMENT = 4;
	int BAD_CHARACTER = 5;
	int BAD_CHAR_LITERAL = 6;
	int BAD_NUMBER_LITERAL = 7;
	int STORAGE_SIZE = 8;
	int LT = 9;
	int LE = 10;
	int GE = 11;
	int NOT_EQ = 12;
	int CUSTOM_TOKEN = 13;
	int COLON_NEW = 14;
	int COLON_OLD = 15;
	int TABLE_NAME_SPEC = 16;
	int QUOTED_STR_START = 17;
	int QUOTED_STR_END = 18;
	int BAD_QUOTED_STRING = 19;
	int PLSQL_ENV_VAR = 20;
	int ANY_CHARACTER = 21;
	int IDENTIFIER = 22;
	int QUOTED_STR = 23;
	int DOUBLE_QUOTED_STRING = 24;
	int AT_PREFIXED = 25;
	int SEMI = 26;
	int COLON = 27;
	int DOT = 28;
	int COMMA = 29;
	int ASTERISK = 30;
	int OPEN_PAREN = 31;
	int CLOSE_PAREN = 32;
	int PLUS = 33;
	int MINUS = 34;
	int DIVIDE = 35;
	int BACKSLASH = 36;
	int EQ = 37;
	int PERCENTAGE = 38;
	int DOUBLEDOT = 39;
	int CONCAT = 40;
	int START_LABEL = 41;
	int DOLLAR = 42;
	int END_LABEL = 43;
	int ASSIGNMENT_EQ = 44;
	int PASS_BY_NAME = 45;
	int VERTBAR = 46;
	int GT = 47;
	int NUMBER = 48;
	int N = 49;
	int WS = 50;
	int LF = 51;
	int SL_COMMENT = 52;
	int ML_COMMENT = 53;
	int IF_COND_CMPL = 54;
	int THEN_COND_CMPL = 55;
	int ELSE_COND_CMPL = 56;
	int END_COND_CMPL = 57;
	int ERROR_COND_CMPL = 58;
	int START_RULE = 59;
	int ERROR_TOKEN_A = 60;
	int PACKAGE_SPEC = 61;
	int PACKAGE_BODY = 62;
	int PACKAGE_NAME = 63;
	int PACKAGE_OBJ_BODY = 64;
	int RECORD_TYPE_DECL = 65;
	int SELECT_EXPRESSION = 66;
	int SELECT_EXPRESSION_UNION = 67;
	int PLSQL_BLOCK = 68;
	int PLSQL_BLOCK_END = 69;
	int CURSOR_DECLARATION = 70;
	int VARIABLE_DECLARATION = 71;
	int PROCEDURE_BODY = 72;
	int FUNCTION_BODY = 73;
	int PARAMETER_SPEC = 74;
	int IF_STATEMENT = 75;
	int LOOP_STATEMENT = 76;
	int STATEMENT = 77;
	int TABLE_REFERENCE_LIST = 78;
	int TABLE_REFERENCE_LIST_FROM = 79;
	int WHERE_CONDITION = 80;
	int SUBQUERY = 81;
	int SQL_IDENTIFIER = 82;
	int FUNCTION = 83;
	int GROUP_FUNCTION = 84;
	int USER_FUNCTION = 85;
	int MULTIPLY = 86;
	int ARGUMENT = 87;
	int ARGUMENT_LIST = 88;
	int FIELD_NAME = 89;
	int PLSQL_EXPR_LIST_USING = 90;
	int EXPR_LIST = 91;
	int DECLARE_LIST = 92;
	int FUNCTION_CALL = 93;
	int PACKAGE_INIT_SECTION = 94;
	int CALL_ARGUMENT_LIST = 95;
	int SPEC_CALL_ARGUMENT_LIST = 96;
	int QUERY_PARTITION_CLAUSE = 97;
	int EXTRACT_OPTIONS = 98;
	int CALL_ARGUMENT = 99;
	int BASE_EXRESSION = 100;
	int COLUMN_SPEC = 101;
	int LOGICAL_AND = 102;
	int LOGICAL_OR = 103;
	int CASE_EXPRESSION_SMPL = 104;
	int CASE_EXPRESSION_SRCH = 105;
	int CASE_STATEMENT = 106;
	int COUNT_FUNC = 107;
	int SQLPLUS_ANONYM_PLSQL_BLOCK = 108;
	int RANK_FUNCTION = 109;
	int LEAD_FUNCTION = 110;
	int LAG_FUNCTION = 111;
	int TRIM_FUNC = 112;
	int DECODE_FUNC = 113;
	int COLUMN_SPEC_LIST = 114;
	int INSERT_COMMAND = 115;
	int UPDATE_COMMAND = 116;
	int DELETE_COMMAND = 117;
	int MERGE_COMMAND = 118;
	int MERGE_WHEN_COMMAND = 119;
	int STRING_LITERAL = 120;
	int NUMERIC_LITERAL = 121;
	int BOOLEAN_LITERAL = 122;
	int RETURN_TYPE = 123;
	int TYPE_SPEC = 124;
	int VARIABLE_NAME = 125;
	int COLUMN_OUTER_JOIN = 126;
	int LOGICAL_FACTOR = 127;
	int TABLE_ALIAS = 128;
	int CAST_FUNC = 129;
	int VAR_REF = 130;
	int PLSQL_VAR_REF = 131;
	int PARAMETER_REF = 132;
	int EXCEPTION_SECTION = 133;
	int EXCEPTION_HANDLER = 134;
	int SELECTED_TABLE = 135;
	int CREATE_PROCEDURE = 136;
	int CREATE_FUNCTION = 137;
	int COMMIT_STATEMENT = 138;
	int ROLLBACK_STATEMENT = 139;
	int NULL_STATEMENT = 140;
	int ASSIGNMENT_STATEMENT = 141;
	int PROCEDURE_CALL = 142;
	int RETURN_STATEMENT = 143;
	int LOCK_TABLE_STATEMENT = 144;
	int OPEN_STATEMENT = 145;
	int FETCH_STATEMENT = 146;
	int SET_TRN_STATEMENT = 147;
	int CLOSE_STATEMENT = 148;
	int OBJECT_NAME = 149;
	int PARAMETER_NAME = 150;
	int DEFAULT = 151;
	int THEN_STATEMENT = 152;
	int ELSIF_STATEMENT = 153;
	int ELSE_STATEMENT = 154;
	int STATEMENT_LIST = 155;
	int RELATION_CONDITION = 156;
	int ISNULL_CONDITION = 157;
	int LIKE_CONDITION = 158;
	int BETWEEN_CONDITION = 159;
	int IN_CONDITION = 160;
	int PARENTHESIZED_EXPR = 161;
	int ORDER_CLAUSE = 162;
	int CONNECT_CLAUSE = 163;
	int GROUP_CLAUSE = 164;
	int INTO_CLAUSE = 165;
	int FOR_UPDATE_CLAUSE = 166;
	int PARTITION_NAME = 167;
	int ASTERISK1 = 168;
	int ROWCOUNT_EXRESSION = 169;
	int MULTIPLICATION_OP = 170;
	int DIVIDE_OP = 171;
	int PLUS_OP = 172;
	int MINUS_OP = 173;
	int CONCAT_OP = 174;
	int CURSOR_NAME = 175;
	int CURSOR_NAME_REF = 176;
	int DATATYPE = 177;
	int EXTRACT_DATE_FUNC = 178;
	int ANSI_JOIN_TAB_SPEC = 179;
	int ANSI_JOIN_TAB_CONDITION = 180;
	int INTERVAL_DAY_TO_SEC_EXPR = 181;
	int INTERVAL_YEAR_TO_MONTH_EXPR = 182;
	int INTERVAL_CONST = 183;
	int USER_CONST = 184;
	int SYSDATE_CONST = 185;
	int SYSTIMESTAMP_CONST = 186;
	int CURRENT_TIMESTAMP_CONST = 187;
	int ALIAS_NAME = 188;
	int EXISTS_EXPR = 189;
	int SUBQUERY_EXPR = 190;
	int TYPE_NAME_REF = 191;
	int TYPE_NAME = 192;
	int SORTED_DEF = 193;
	int RAISE_STATEMENT = 194;
	int PACKAGE_OBJ_SPEC = 195;
	int PROCEDURE_SPEC = 196;
	int SIMPLE_UPDATE_COMMAND = 197;
	int SUBQUERY_UPDATE_COMMAND = 198;
	int IMMEDIATE_COMMAND = 199;
	int FUNCTION_SPEC = 200;
	int NEGATE_FACTOR = 201;
	int TABLE_TYPE_REF = 202;
	int COLUMN_TYPE_REF = 203;
	int STATEMENT_ANNOT = 204;
	int ASTERISK_COLUMN = 205;
	int IDENT_ASTERISK_COLUMN = 206;
	int EXPR_COLUMN = 207;
	int TABLE_REF = 208;
	int TABLE_REF_WITH_LINK = 209;
	int FROM_SUBQUERY = 210;
	int FROM_PLAIN_TABLE = 211;
	int SCHEMA_NAME = 212;
	int COLUMN_NAME_REF = 213;
	int ARITHMETIC_EXPR = 214;
	int ASSIGNMENT_OP = 215;
	int DBTIMEZONE = 216;
	int SUBQUERY_CONDITION = 217;
	int RECORD_ITEM = 218;
	int EXCEPTION_DECL = 219;
	int COMPLEX_NAME = 220;
	int CHARACTER_SET = 221;
	int AUTHID = 222;
	int RESTRICT_REF_PRAGMA = 223;
	int AUTONOMOUS_TRN_PRAGMA = 224;
	int EXCEPTION_PRAGMA = 225;
	int FIPSFLAG_PRAGMA = 226;
	int BUILTIN_PRAGMA = 227;
	int INTERFACE_PRAGMA = 228;
	int TIMESTAMPG_PRAGMA = 229;
	int SERIALLY_REUSABLE_PRAGMA = 230;
	int TIMESTAMP_CONST = 231;
	int SUBTYPE_DECL = 232;
	int MEMBER_OF = 233;
	int SQLPLUS_SET = 234;
	int SQLPLUS_SHOW = 235;
	int SQLPLUS_DEFINE = 236;
	int SQLPLUS_VARIABLE = 237;
	int SQLPLUS_EXEC = 238;
	int SQLPLUS_WHENEVER = 239;
	int SQLPLUS_PROMPT = 240;
	int SQLPLUS_COLUMN = 241;
	int SQLPLUS_START = 242;
	int SQLPLUS_SERVEROUTPUT = 243;
	int SQLPLUS_REPFOOTER = 244;
	int SQLPLUS_REPHEADER = 245;
	int SQLPLUS_EXIT = 246;
	int SQLPLUS_QUIT = 247;
	int SQLPLUS_RUNSCRIPT = 248;
	int SQLPLUS_SPOOL = 249;
	int CONSUMED_TILL_EOL = 250;
	int OR_LOGICAL = 251;
	int AND_LOGICAL = 252;
	int NOT_LOGICAL = 253;
	int LOGICAL_EXPR = 254;
	int RELATION_OP = 255;
	int SEQUENCE_EXPR = 256;
	int SEQUENCE_REF = 257;
	int ALIAS_IDENT = 258;
	int COLUMN_NAME_DDL = 259;
	int COLUMN_DEF = 260;
	int TABLE_DEF = 261;
	int A_COLUMN_DEF = 262;
	int TABLE_COLLECTION = 263;
	int VARRAY_COLLECTION = 264;
	int REF_CURSOR = 265;
	int OBJECT_TYPE_DEF = 266;
	int AT_TIME_ZONE_EXPR = 267;
	int TIMEZONE_SPEC = 268;
	int GRANT_COMMAND = 269;
	int REVOKE_COMMAND = 270;
	int ALTER_TABLE = 271;
	int ALTER_GENERIC = 272;
	int ALTER_TABLE_CONSTRAINT = 273;
	int CREATE_TEMP_TABLE = 274;
	int COMMENT = 275;
	int COMMENT_STR = 276;
	int CREATE_INDEX = 277;
	int INSERT_INTO_SUBQUERY_COMMAND = 278;
	int CONDITIONAL_COMPILATION = 279;
	int COND_COMP_SEQ = 280;
	int COND_COMP_SEQ2 = 281;
	int COND_COMP_ERROR = 282;
	int COLUMN_NAME_LIST = 283;
	int OWNER_COLUMN_NAME_LIST = 284;
	int CREATE_VIEW = 285;
	int CREATE_MATERIALIZED_VIEW = 286;
	int CREATE_MATERIALIZED_VIEW_LOG = 287;
	int DATATYPE_PARAM_INFO = 288;
	int CREATE_VIEW_COLUMN_DEF = 289;
	int TABLE_FUNCTION = 290;
	int ROWNUM = 291;
	int ROWID = 292;
	int CUSTOM_AGGR_FUNCTION = 293;
	int LAST_STMT_RESULT_NUM = 294;
	int LAST_STMT_RESULT_BOOL = 295;
	int SQL_CURSOR_FAKE_ATTR = 296;
	int CURRENT_OF_CLAUSE = 297;
	int CURSOR_STATE = 298;
	int SQLCODE_SYSVAR = 299;
	int SQLERRM_SYSVAR = 300;
	int COLLECTION_METHOD_CALL = 301;
	int COLLECTION_METHOD_CALL2 = 302;
	int C_RECORD_ITEM_REF = 303;
	int CALLABLE_NAME_REF = 304;
	int BUILTIN_FUNC_NAME = 305;
	int TRUNCATE_TABLE = 306;
	int DROP_VIEW = 307;
	int DROP_TABLE = 308;
	int DROP_FUNCTION = 309;
	int DROP_PROCEDURE = 310;
	int DROP_PACKAGE = 311;
	int DROP_INDEX = 312;
	int DROP_SEQUENCE = 313;
	int DROP_TYPE = 314;
	int DROP_OPERATOR = 315;
	int DROP_SYNONYM = 316;
	int DROP_USER = 317;
	int DROP_ROLE = 318;
	int DROP_LIBRARY = 319;
	int DROP_DB_LINK = 320;
	int DROP_DIRECTORY = 321;
	int DROP_TRIGGER = 322;
	int CREATE_SYNONYM = 323;
	int SYNONYM_NAME = 324;
	int SYNONYM_OBJ = 325;
	int SYNONYM_OBJ_WITH_LINK = 326;
	int COLUMN_PK_SPEC = 327;
	int COLUMN_FK_SPEC = 328;
	int NOT_NULL_STMT = 329;
	int COLUMN_CHECK_CONSTRAINT = 330;
	int COLUMN_NOT_NULL_CONSTRAINT = 331;
	int PK_SPEC = 332;
	int FK_SPEC = 333;
	int UNIQUE_CONSTRAINT = 334;
	int CHECK_CONSTRAINT = 335;
	int CONSTRAINT_NAME = 336;
	int ADD_CONSTRAINT = 337;
	int ADD_PRIMARY_KEY = 338;
	int ALTER_COLUMN_SPEC = 339;
	int IOT_TYPE = 340;
	int HEAP_ORGINIZED = 341;
	int EXTERNAL_TYPE = 342;
	int EXTERNAL_TABLE_SPEC = 343;
	int WRITE_ACCESS_PARAMS_SPEC = 344;
	int LOADER_ACCESS_PARAMS = 345;
	int EXT_FIELD_SPEC_LIST = 346;
	int EXT_FIELD_SPEC = 347;
	int RECORD_FMT_SPEC = 348;
	int EXT_TABLE_LOCATION_SPEC = 349;
	int STORAGE_PARAM = 350;
	int STORAGE_SPEC = 351;
	int PARALLEL_CLAUSE = 352;
	int REJECT_SPEC = 353;
	int NAME_FRAGMENT = 354;
	int EXEC_NAME_REF = 355;
	int COLLECTION_METHOD_NAME = 356;
	int V_COLUMN_DEF = 357;
	int TABLE_NAME_DDL = 358;
	int VIEW_NAME = 359;
	int INDEX_NAME = 360;
	int VIEW_NAME_DDL = 361;
	int SEQUENCE_NAME = 362;
	int USER_NAME = 363;
	int USER_ROLE = 364;
	int SYSTEM_PRIVILEGE = 365;
	int CREATE_TRIGGER = 366;
	int CREATE_DIRECTORY = 367;
	int CREATE_DB_LINK = 368;
	int CREATE_SEQUENCE = 369;
	int TRIGGER_FOR_EACH = 370;
	int TRIGGER_NAME = 371;
	int ALTER_TRIGGER = 372;
	int DB_EVNT_TRIGGER_CLAUSE = 373;
	int DDL_TRIGGER_CLAUSE = 374;
	int DML_TRIGGER_CLAUSE = 375;
	int TRIGGER_COLUMN_REF = 376;
	int INSTEADOF_TRIGGER = 377;
	int TRIGGER_TARGET = 378;
	int FORALL_LOOP_SPEC = 379;
	int CURSOR_REF_LOOP_SPEC = 380;
	int CURSOR_LOOP_SPEC = 381;
	int CURSOR_LOOP_INDEX = 382;
	int NUM_LOOP_INDEX = 383;
	int NUMERIC_LOOP_SPEC = 384;
	int RECORD_ITEM_NAME = 385;
	int GOTO_STATEMENT = 386;
	int EXIT_STATEMENT = 387;
	int LABEL_NAME = 388;
	int PARTITION_SPEC = 389;
	int RANGE_PARTITION = 390;
	int HASH_PARTITION = 391;
	int MONITORING_CLAUSE = 392;
	int CREATE_TABLESPACE = 393;
	int DROP_TABLESPACE = 394;
	int TABLESPACE_NAME = 395;
	int ALTER_TABLESPACE = 396;
	int CREATE_USER = 397;
	int CREATE_TYPE = 398;
	int BIND_VAR = 399;
	int RETURNING_CLAUSE = 400;
	int ALTER_INDEX = 401;
	int RENAME_TABLE = 402;
	int TABLE_REF_NOT_RESOLVED = 403;
	int VIEW_NAME_REF = 404;
	int TABLE_NAME_REF = 405;
	int GENERIC_REF = 406;
	int CALL_NOT_RESOLVED = 407;
	int BUILT_IT_FUNCTION_CALL = 408;
	int UDF_CALL = 409;
	int UDP_CALL = 410;
	int LITERAL_package = 411;
	int LITERAL_body = 412;
	int LITERAL_alter = 413;
	int LITERAL_drop = 414;
	int LITERAL_table = 415;
	int LITERAL_purge = 416;
	int LITERAL_view = 417;
	int LITERAL_cascade = 418;
	int LITERAL_constraints = 419;
	int LITERAL_function = 420;
	int LITERAL_procedure = 421;
	int LITERAL_index = 422;
	int LITERAL_force = 423;
	int LITERAL_sequence = 424;
	int LITERAL_type = 425;
	int LITERAL_validate = 426;
	int LITERAL_public = 427;
	int LITERAL_synonym = 428;
	int LITERAL_operator = 429;
	int LITERAL_user = 430;
	int LITERAL_role = 431;
	int LITERAL_directory = 432;
	int LITERAL_library = 433;
	int LITERAL_database = 434;
	int LITERAL_link = 435;
	int LITERAL_trigger = 436;
	int LITERAL_associate = 437;
	int LITERAL_statistics = 438;
	int LITERAL_with = 439;
	int LITERAL_column = 440;
	int LITERAL_functions = 441;
	int LITERAL_packages = 442;
	int LITERAL_types = 443;
	int LITERAL_indexes = 444;
	int LITERAL_indextypes = 445;
	int LITERAL_system = 446;
	int LITERAL_managed = 447;
	int LITERAL_storage = 448;
	int LITERAL_default = 449;
	int LITERAL_cost = 450;
	int LITERAL_selectivity = 451;
	int LITERAL_using = 452;
	int LITERAL_null = 453;
	int LITERAL_truncate = 454;
	int LITERAL_comment = 455;
	int LITERAL_on = 456;
	int LITERAL_is = 457;
	int LITERAL_not = 458;
	int LITERAL_disable = 459;
	int LITERAL_enable = 460;
	int LITERAL_row = 461;
	int LITERAL_movement = 462;
	int LITERAL_constraint = 463;
	int LITERAL_primary = 464;
	int LITERAL_key = 465;
	int LITERAL_references = 466;
	int LITERAL_rely = 467;
	int LITERAL_check = 468;
	int LITERAL_unique = 469;
	int LITERAL_sysdate = 470;
	int LITERAL_systimestamp = 471;
	int LITERAL_set = 472;
	int LITERAL_long = 473;
	int LITERAL_show = 474;
	int LITERAL_var = 475;
	int LITERAL_variable = 476;
	int LITERAL_col = 477;
	int LITERAL_exec = 478;
	int LITERAL_execute = 479;
	int LITERAL_whenever = 480;
	int LITERAL_sqlerror = 481;
	int LITERAL_oserror = 482;
	int LITERAL_exit = 483;
	int LITERAL_continue = 484;
	int LITERAL_commit = 485;
	int LITERAL_rollback = 486;
	int LITERAL_none = 487;
	int LITERAL_def = 488;
	int LITERAL_define = 489;
	int LITERAL_prompt = 490;
	int LITERAL_rem = 491;
	int LITERAL_host = 492;
	int LITERAL_quit = 493;
	int LITERAL_spool = 494;
	int LITERAL_sta = 495;
	int LITERAL_start = 496;
	int LITERAL_repfooter = 497;
	int LITERAL_off = 498;
	int LITERAL_repheader = 499;
	int LITERAL_serveroutput = 500;
	int LITERAL_begin = 501;
	int LITERAL_declare = 502;
	int DOUBLE_DOT = 503;
	int LITERAL_rename = 504;
	int LITERAL_create = 505;
	int LITERAL_or = 506;
	int LITERAL_replace = 507;
	int LITERAL_materialized = 508;
	int LITERAL_log = 509;
	int LITERAL_global = 510;
	int LITERAL_temporary = 511;
	int LITERAL_under = 512;
	int LITERAL_final = 513;
	int LITERAL_as = 514;
	int LITERAL_object = 515;
	int LITERAL_identified = 516;
	int LITERAL_by = 517;
	int LITERAL_externally = 518;
	int LITERAL_globally = 519;
	int LITERAL_tablespace = 520;
	int LITERAL_quota = 521;
	int LITERAL_unlimited = 522;
	int LITERAL_profile = 523;
	int LITERAL_password = 524;
	int LITERAL_expire = 525;
	int LITERAL_account = 526;
	int LITERAL_lock = 527;
	int LITERAL_unlock = 528;
	int LITERAL_bigfile = 529;
	int LITERAL_smallfile = 530;
	int LITERAL_tempfile = 531;
	int LITERAL_undo = 532;
	int LITERAL_datafile = 533;
	int LITERAL_next = 534;
	int LITERAL_maxsize = 535;
	int LITERAL_size = 536;
	int LITERAL_reuse = 537;
	int LITERAL_extent = 538;
	int LITERAL_management = 539;
	int LITERAL_local = 540;
	int LITERAL_uniform = 541;
	int LITERAL_dictionary = 542;
	int LITERAL_retention = 543;
	int LITERAL_guarantee = 544;
	int LITERAL_noguarantee = 545;
	int LITERAL_autoextend = 546;
	int LITERAL_group = 547;
	int LITERAL_logging = 548;
	int LITERAL_nologging = 549;
	int LITERAL_no = 550;
	int LITERAL_online = 551;
	int LITERAL_offline = 552;
	int LITERAL_normal = 553;
	int LITERAL_immediate = 554;
	int LITERAL_read = 555;
	int LITERAL_only = 556;
	int LITERAL_write = 557;
	int LITERAL_permanent = 558;
	int LITERAL_including = 559;
	int LITERAL_contents = 560;
	int LITERAL_and = 561;
	int LITERAL_datafiles = 562;
	int LITERAL_add = 563;
	int LITERAL_to = 564;
	int LITERAL_end = 565;
	int LITERAL_backup = 566;
	int LITERAL_coalesce = 567;
	int LITERAL_minimum = 568;
	int LITERAL_maxvalue = 569;
	int LITERAL_minvalue = 570;
	int LITERAL_cycle = 571;
	int LITERAL_nocycle = 572;
	int LITERAL_cache = 573;
	int LITERAL_nocache = 574;
	int LITERAL_increment = 575;
	int LITERAL_order = 576;
	int LITERAL_noorder = 577;
	int LITERAL_for = 578;
	int LITERAL_connect = 579;
	int LITERAL_after = 580;
	int LITERAL_before = 581;
	int LITERAL_startup = 582;
	int LITERAL_shutdown = 583;
	int LITERAL_servererror = 584;
	int LITERAL_logon = 585;
	int LITERAL_logoff = 586;
	int LITERAL_analyze = 587;
	int LITERAL_audit = 588;
	int LITERAL_noaudit = 589;
	int LITERAL_ddl = 590;
	int LITERAL_diassociate = 591;
	int LITERAL_grant = 592;
	int LITERAL_revoke = 593;
	int LITERAL_schema = 594;
	int LITERAL_instead = 595;
	int LITERAL_of = 596;
	int LITERAL_delete = 597;
	int LITERAL_insert = 598;
	int LITERAL_update = 599;
	int LITERAL_each = 600;
	int LITERAL_referencing = 601;
	int LITERAL_old = 602;
	int LITERAL_new = 603;
	int LITERAL_when = 604;
	int LITERAL_bitmap = 605;
	int LITERAL_asc = 606;
	int LITERAL_desc = 607;
	int LITERAL_preserve = 608;
	int LITERAL_rows = 609;
	int LITERAL_nested = 610;
	int LITERAL_store = 611;
	int LITERAL_return = 612;
	int LITERAL_locator = 613;
	int LITERAL_value = 614;
	int LITERAL_lob = 615;
	int LITERAL_chunk = 616;
	int LITERAL_reads = 617;
	int LITERAL_pctversion = 618;
	int LITERAL_freepools = 619;
	int LITERAL_in = 620;
	int LITERAL_segment = 621;
	int LITERAL_creation = 622;
	int LITERAL_deferred = 623;
	int LITERAL_cluster = 624;
	int LITERAL_pctthreshold = 625;
	int LITERAL_filesystem_like_logging = 626;
	int LITERAL_compress = 627;
	int LITERAL_all = 628;
	int LITERAL_direct_load = 629;
	int LITERAL_operations = 630;
	int LITERAL_nocompress = 631;
	int LITERAL_pctfree = 632;
	int LITERAL_pctused = 633;
	int LITERAL_initrans = 634;
	int LITERAL_maxtrans = 635;
	int LITERAL_compute = 636;
	int LITERAL_parallel = 637;
	int LITERAL_noparallel = 638;
	int LITERAL_monitoring = 639;
	int LITERAL_nomonitoring = 640;
	int LITERAL_overflow = 641;
	int LITERAL_partition = 642;
	int LITERAL_range = 643;
	int LITERAL_interval = 644;
	int LITERAL_values = 645;
	int LITERAL_less = 646;
	int LITERAL_than = 647;
	int LITERAL_hash = 648;
	int LITERAL_partitions = 649;
	int LITERAL_novalidate = 650;
	int LITERAL_organization = 651;
	int LITERAL_heap = 652;
	int LITERAL_external = 653;
	int LITERAL_degree = 654;
	int LITERAL_instances = 655;
	int LITERAL_reject = 656;
	int LITERAL_limit = 657;
	int LITERAL_initial = 658;
	int LITERAL_minextents = 659;
	int LITERAL_maxextents = 660;
	int LITERAL_pctincrease = 661;
	int LITERAL_freelists = 662;
	int LITERAL_freelist = 663;
	int LITERAL_groups = 664;
	int LITERAL_optimal = 665;
	int LITERAL_buffer_pool = 666;
	int LITERAL_keep = 667;
	int LITERAL_recycle = 668;
	int LITERAL_flash_cache = 669;
	int LITERAL_cell_flash_cache = 670;
	int LITERAL_encrypt = 671;
	int LITERAL_foreign = 672;
	int LITERAL_restrict = 673;
	int LITERAL_action = 674;
	int LITERAL_modify = 675;
	int LITERAL_sort = 676;
	int LITERAL_nosort = 677;
	int LITERAL_reverse = 678;
	int LITERAL_visible = 679;
	int LITERAL_novisible = 680;
	int LITERAL_record = 681;
	int LITERAL_ref = 682;
	int LITERAL_cursor = 683;
	int LITERAL_rowtype = 684;
	int LITERAL_varray = 685;
	int LITERAL_option = 686;
	int LITERAL_prebuilt = 687;
	int LITERAL_without = 688;
	int LITERAL_reduced = 689;
	int LITERAL_precision = 690;
	int LITERAL_excluding = 691;
	int LITERAL_id = 692;
	int LITERAL_rowid = 693;
	int LITERAL_query = 694;
	int LITERAL_rewrite = 695;
	int LITERAL_never = 696;
	int LITERAL_refresh = 697;
	int LITERAL_build = 698;
	int LITERAL_fast = 699;
	int LITERAL_complete = 700;
	int LITERAL_demand = 701;
	// "view_column_def_$internal$" = 702
	int LITERAL_timestamp = 703;
	int LITERAL_authid = 704;
	int LITERAL_wrapped = 705;
	int LITERAL_pragma = 706;
	int LITERAL_restrict_references = 707;
	int LITERAL_interface = 708;
	int LITERAL_builtin = 709;
	int LITERAL_fipsflag = 710;
	int LITERAL_exception_init = 711;
	int LITERAL_constant = 712;
	int LITERAL_subtype = 713;
	int LITERAL_loop = 714;
	int LITERAL_while = 715;
	int LITERAL_sql = 716;
	int LITERAL_found = 717;
	int LITERAL_notfound = 718;
	int LITERAL_rowcount = 719;
	int LITERAL_isopen = 720;
	int LITERAL_bulk_rowcount = 721;
	int LITERAL_bulk_exceptions = 722;
	int LITERAL_error_index = 723;
	int LITERAL_error_code = 724;
	int LITERAL_count = 725;
	int LITERAL_case = 726;
	int LITERAL_then = 727;
	int LITERAL_else = 728;
	int LITERAL_autonomous_transaction = 729;
	int LITERAL_prior = 730;
	int LITERAL_goto = 731;
	int LITERAL_number = 732;
	int LITERAL_binary_integer = 733;
	int LITERAL_natural = 734;
	int LITERAL_positive = 735;
	int LITERAL_char = 736;
	int LITERAL_byte = 737;
	int LITERAL_raw = 738;
	int LITERAL_boolean = 739;
	int LITERAL_date = 740;
	int LITERAL_time = 741;
	int LITERAL_zone = 742;
	int LITERAL_year = 743;
	int LITERAL_month = 744;
	int LITERAL_day = 745;
	int LITERAL_second = 746;
	int LITERAL_smallint = 747;
	int LITERAL_real = 748;
	int LITERAL_numeric = 749;
	int LITERAL_int = 750;
	int LITERAL_integer = 751;
	int LITERAL_pls_integer = 752;
	int LITERAL_double = 753;
	int LITERAL_float = 754;
	int LITERAL_decimal = 755;
	int LITERAL_varchar = 756;
	// "varchar2" = 757
	int LITERAL_nvarchar = 758;
	// "nvarchar2" = 759
	int LITERAL_character = 760;
	int LITERAL_blob = 761;
	int LITERAL_clob = 762;
	int LITERAL_nclob = 763;
	int LITERAL_bfile = 764;
	int LITERAL_out = 765;
	int LITERAL_nocopy = 766;
	int LITERAL_any_cs = 767;
	int LITERAL_charset = 768;
	int LITERAL_exception = 769;
	int LITERAL_serially_reusable = 770;
	int LITERAL_pipelined = 771;
	int LITERAL_parallel_enable = 772;
	int LITERAL_deterministic = 773;
	int LITERAL_language = 774;
	int LITERAL_java = 775;
	int LITERAL_name = 776;
	int LITERAL_raise = 777;
	int LITERAL_save = 778;
	int LITERAL_exceptions = 779;
	int LITERAL_forall = 780;
	int LITERAL_indices = 781;
	int LITERAL_true = 782;
	int LITERAL_false = 783;
	// "**" = 784
	int LITERAL_at = 785;
	int LITERAL_current = 786;
	int LITERAL_exists = 787;
	int LITERAL_select = 788;
	int LITERAL_like = 789;
	int LITERAL_escape = 790;
	int LITERAL_between = 791;
	int LITERAL_member = 792;
	int LITERAL_sqlcode = 793;
	int LITERAL_sqlerrm = 794;
	int LITERAL_cast = 795;
	int LITERAL_decode = 796;
	int LITERAL_trim = 797;
	int LITERAL_multiset = 798;
	int LITERAL_lag = 799;
	int LITERAL_lead = 800;
	int LITERAL_rank = 801;
	int LITERAL_dense_rank = 802;
	int LITERAL_extract = 803;
	int LITERAL_minute = 804;
	int LITERAL_hour = 805;
	int LITERAL_any = 806;
	int LITERAL_nextval = 807;
	int LITERAL_currval = 808;
	int LITERAL_over = 809;
	int LITERAL_sessiontimezone = 810;
	int LITERAL_dbtimezone = 811;
	int LITERAL_distinct = 812;
	int LITERAL_from = 813;
	int LITERAL_timezone_hour = 814;
	int LITERAL_timezone_minute = 815;
	int LITERAL_timezone_region = 816;
	int LITERAL_timezone_abbr = 817;
	int LITERAL_leading = 818;
	int LITERAL_trailing = 819;
	int LITERAL_both = 820;
	int LITERAL_work = 821;
	int LITERAL_if = 822;
	int LITERAL_elsif = 823;
	int LITERAL_privileges = 824;
	int LITERAL_hierarchy = 825;
	int LITERAL_debug = 826;
	int LITERAL_admin = 827;
	int LITERAL_resource = 828;
	int LITERAL_indextype = 829;
	int LITERAL_session = 830;
	int LITERAL_become = 831;
	int LITERAL_union = 832;
	int LITERAL_intersect = 833;
	int LITERAL_minus = 834;
	int LITERAL_bulk = 835;
	int LITERAL_collect = 836;
	int LITERAL_into = 837;
	int LITERAL_flush = 838;
	int LITERAL_shared_pool = 839;
	int LITERAL_reset = 840;
	int LITERAL_sid = 841;
	int LITERAL_rebuild = 842;
	int LITERAL_unusable = 843;
	int LITERAL_left = 844;
	int LITERAL_right = 845;
	int LITERAL_inner = 846;
	int LITERAL_outer = 847;
	int LITERAL_join = 848;
	int LITERAL_full = 849;
	int LITERAL_where = 850;
	int LITERAL_current_timestamp = 851;
	int LITERAL_rownum = 852;
	int LITERAL_the = 853;
	int LITERAL_having = 854;
	int LITERAL_nulls = 855;
	int LITERAL_first = 856;
	int LITERAL_last = 857;
	int LITERAL_nowait = 858;
	int LITERAL_wait = 859;
	int LITERAL_merge = 860;
	int LITERAL_matched = 861;
	int LITERAL_returning = 862;
	int LITERAL_transaction = 863;
	int LITERAL_close = 864;
	int LITERAL_fetch = 865;
	int LITERAL_mode = 866;
	int LITERAL_share = 867;
	int LITERAL_exclusive = 868;
	int LITERAL_open = 869;
	int LITERAL_savepoint = 870;
	int LITERAL_oracle_loader = 871;
	int LITERAL_oracle_datapump = 872;
	int LITERAL_access = 873;
	int LITERAL_parameters = 874;
	int LITERAL_nologfile = 875;
	int LITERAL_logfile = 876;
	int LITERAL_version = 877;
	int LITERAL_compatible = 878;
	int LITERAL_latest = 879;
	int LITERAL_compression = 880;
	int LITERAL_enabled = 881;
	int LITERAL_disabled = 882;
	int LITERAL_encryption = 883;
	int LITERAL_records = 884;
	int LITERAL_fixed = 885;
	int LITERAL_delimited = 886;
	int LITERAL_newline = 887;
	int LITERAL_characterset = 888;
	int LITERAL_data = 889;
	int LITERAL_big = 890;
	int LITERAL_little = 891;
	int LITERAL_endian = 892;
	int LITERAL_mark = 893;
	int LITERAL_nocheck = 894;
	int LITERAL_string = 895;
	int LITERAL_sizes = 896;
	int LITERAL_bytes = 897;
	int LITERAL_characters = 898;
	int LITERAL_load = 899;
	int LITERAL_nobadfile = 900;
	int LITERAL_badfile = 901;
	int LITERAL_nodiscardfile = 902;
	int LITERAL_discardfile = 903;
	int LITERAL_readsize = 904;
	int LITERAL_data_cache = 905;
	int LITERAL_skip = 906;
	int LITERAL_preprocessor = 907;
	int LITERAL_fields = 908;
	int LITERAL_missing = 909;
	int LITERAL_field = 910;
	int LITERAL_are = 911;
	int LITERAL_transforms = 912;
	int LITERAL_concat = 913;
	int LITERAL_lobfile = 914;
	int LITERAL_enclosed = 915;
	int LITERAL_terminated = 916;
	int LITERAL_whitespace = 917;
	int LITERAL_optionally = 918;
	int LITERAL_lrtrim = 919;
	int LITERAL_notrim = 920;
	int LITERAL_ltrim = 921;
	int LITERAL_rtrim = 922;
	int LITERAL_ldrtrim = 923;
	int LITERAL_position = 924;
	int LITERAL_unsigned = 925;
	int LITERAL_zoned = 926;
	int LITERAL_oracle_date = 927;
	int LITERAL_oracle_number = 928;
	int LITERAL_counted = 929;
	int LITERAL_varraw = 930;
	int LITERAL_varcharc = 931;
	int LITERAL_varrawc = 932;
	int LITERAL_date_format = 933;
	int LITERAL_timezone = 934;
	int LITERAL_mask = 935;
	int LITERAL_location = 936;
	int LITERAL_aggregate = 937;
	int LITERAL_ldtrim = 938;
}
