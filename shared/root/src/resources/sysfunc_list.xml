<function-list>
    <function name="to_number" return-type="NUMBER" desc="TO_NUMBER(TMSI,'xxxxxxxxxxxxxxxxxx')">
        <arg name="EXPRESSION" type="CHAR" optional="false" decs=""/>
        <arg name="FORMAT" type="CHAR" optional="true" decs=""/>
    </function>
    <function name="to_number" return-type="NUMBER" desc="TO_NUMBER(TMSI)">
        <arg name="EXPRESSION" type="CHAR" optional="false" decs=""/>
    </function>

    <!-- Numeric Functions -->
    <function name="floor" return-type="NUMBER">
        <arg name="EXPR" type="NUMBER"/>
    </function>
    <function name="mod" return-type="NUMBER" desc="MOD(BEGIN_TIME_MS + DURATION, 1000)">
        <arg name="EXPRESSION" type="NUMBER"/>
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="round" return-type="NUMBER" desc="ROUND(15.193)">
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="round" return-type="NUMBER" desc="ROUND(15.193,1)">
        <arg name="EXPRESSION" type="NUMBER"/>
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="bitand" return-type="NUMBER" desc="bitand(15,1)">
        <arg name="EXPRESSION" type="NUMBER"/>
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="bitor" return-type="NUMBER" desc="bitor(15,1)">
        <arg name="EXPRESSION" type="NUMBER"/>
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="abs" return-type="NUMBER" desc="abs(15)">
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="greatest" return-type="NUMBER" desc="greatest(15, 67)">
        <arg name="EXPRESSION" type="NUMBER"/>
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="least" return-type="NUMBER" desc="least(15, 67)">
        <arg name="EXPRESSION" type="NUMBER"/>
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="sign" return-type="NUMBER" desc="sign(67)">
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>

    <!-- Character Functions Returning Number Values -->
    <function name="length" return-type="INTEGER">
        <arg name="STRING" type="CHAR"/>
    </function>
    <function name="instr" return-type="INTEGER">
        <arg name="STRING" type="CHAR"/>
        <arg name="SUBSTRING" type="CHAR"/>
    </function>
    <function name="instr" return-type="INTEGER">
        <arg name="STRING" type="CHAR"/>
        <arg name="SUBSTRING" type="CHAR"/>
        <arg name="POSITION" type="NUMBER"/>
    </function>
    <function name="instr" return-type="INTEGER">
        <arg name="STRING" type="CHAR"/>
        <arg name="SUBSTRING" type="CHAR"/>
        <arg name="POSITION" type="NUMBER"/>
        <arg name="OCCURENCE" type="NUMBER"/>
    </function>

    <!-- Character Functions Returning Character Values -->
    <function name="replace" return-type="CHAR" desc="REPLACE(lc_tz_cond,':h_tz_id','v.tz_id')">
        <arg name="SOURCE" type="CHAR"/>
        <arg name="PATTERN" type="CHAR"/>
        <arg name="VALUE" type="CHAR"/>
    </function>
    <function name="upper" return-type="CHAR">
        <arg name="EXPRESSION" type="CHAR"/>
    </function>
    <function name="lower" return-type="CHAR">
        <arg name="EXPRESSION" type="CHAR"/>
    </function>
    <function name="ltrim" return-type="CHAR">
        <arg name="value" type="CHAR"/>
    </function>
    <function name="ltrim" return-type="CHAR">
        <arg name="value" type="CHAR"/>
        <arg name="set" type="CHAR"/>
    </function>
    <function name="lpad" return-type="CHAR">
        <arg name="value" type="CHAR"/>
        <arg name="set" type="NUMBER"/>
    </function>
    <function name="translate" return-type="CHAR">
        <arg name="STRING" type="CHAR"/>
        <arg name="STRING1" type="CHAR"/>
        <arg name="STRING2" type="CHAR"/>
    </function>
    <function name="to_char" return-type="CHAR" desc="TO_CHAR(SYSDATE, 'SS')">
        <arg name="date" type="DATE" decs="Date"/>
        <arg name="format" type="CHAR"/>
    </function>
    <function name="to_char" return-type="CHAR" desc="TO_CHAR(3344)">
        <arg name="value" type="NUMBER" decs="number"/>
    </function>
    <function name="substr" return-type="CHAR" desc="SUBSTR('hello world', 7, 5)">
        <arg name="STRING" type="CHAR"/>
        <arg name="POSITION" type="INTEGER"/>
        <arg name="SUBSTRING_LENGTH" type="INTEGER"/>
    </function>
    <function name="substr" return-type="CHAR" desc="SUBSTR('hello world', 7)">
        <arg name="STRING" type="CHAR"/>
        <arg name="POSITION" type="INTEGER"/>
    </function>
    <function name="REGEXP_SUBSTR" return-type="CHAR">
        <arg name="EXPR" type="CHAR"/>
        <arg name="REG_EXP" type="CHAR"/>
    </function>
    <function name="CHR" return-type="CHAR">
        <arg name="POSITION" type="INTEGER"/>
    </function>
    <function name="RPAD" return-type="CHAR">
        <arg name="STRING1" type="CHAR"/>
        <arg name="LEN" type="INTEGER"/>
    </function>
    <function name="RPAD" return-type="CHAR">
        <arg name="STRING1" type="CHAR"/>
        <arg name="LEN" type="INTEGER"/>
        <arg name="PAD_STRING" type="CHAR"/>
    </function>
    <function name="LPAD" return-type="CHAR">
        <arg name="STRING1" type="CHAR"/>
        <arg name="LEN" type="INTEGER"/>
    </function>
    <function name="LPAD" return-type="CHAR">
        <arg name="STRING1" type="CHAR"/>
        <arg name="LEN" type="INTEGER"/>
        <arg name="PAD_STRING" type="CHAR"/>
    </function>

    <function name="RAWTOHEX" return-type="CHAR">
        <arg name="VALUE" type="CHAR"/>
    </function>

    <!-- Date Functions -->
    <function name="SYS_EXTRACT_UTC" return-type="TIMESTAMP" desc="SYS_EXTRACT_UTC(TIMESTAMP '2000-03-28 11:30:00.00 -08:00')">
        <arg name="datetime" type="TIMESTAMP"/>
    </function>
    <function name="round" return-type="DATE" desc="ROUND (TO_DATE ('27-OCT-00'))">
        <arg name="date" type="DATE"/>
    </function>
    <function name="round" return-type="DATE" desc="ROUND (TO_DATE ('27-OCT-00'),'YEAR')">
        <arg name="date" type="DATE"/>
        <arg name="format" type="CHAR"/>
    </function>
    <function name="to_date" return-type="DATE" desc="TO_DATE('YYYY/MM/DD', '2009/02/21')">
        <arg name="value" type="CHAR" decs="Input string"/>
        <arg name="format" type="CHAR" decs="Date format"/>
    </function>
    <function name="to_date" return-type="DATE" desc="TO_DATE('YYYY/MM/DD', '2009/02/21')">
        <arg name="value" type="CHAR" decs="Input string"/>
    </function>
    <function name="trunc" return-type="DATE" desc="TRUNC(TO_DATE('27-OCT-92','DD-MON-YY'), 'YEAR')">
        <arg name="value" type="DATE" />
        <arg name="format" type="CHAR"/>
    </function>
    <function name="trunc" return-type="DATE" desc="TRUNC(TO_DATE('27-OCT-92','DD-MON-YY'))">
        <arg name="value" type="DATE" />
    </function>
    <function name="trunc" return-type="NUMBER" desc="TRUNC(a_number/102893)">
        <arg name="value" type="NUMBER" />
    </function>
    <function name="add_months" return-type="DATE" desc="ADD_MONTHS(hire_date,1)">
        <arg name="value" type="DATE" />
        <arg name="value_to_add" type="NUMBER"/>
    </function>
    <function name="TO_DSINTERVAL" return-type="INTERVAL" desc="TO_DSINTERVAL('100 10:00:00')">
        <arg name="value" type="CHAR" />
    </function>
    <function name="from_tz" return-type="DATE" desc="FROM_TZ(l_load_st_dt, TZ)">
        <arg name="value" type="DATE" />
        <arg name="timezone" type="CHAR"/>
    </function>
    <function name="numtodsinterval" return-type="INTERVAL" desc="NUMTODSINTERVAL(EXTRACT (HOUR FROM PDP_CONTEXT_STOP_TIME),'HOUR')">
        <arg name="value" type="NUMBER" />
        <arg name="expression" type="CHAR"/>
    </function>
    <function name="numtoyminterval" return-type="INTERVAL" desc="NUMTOYMINTERVAL(1,'year')">
        <arg name="value" type="NUMBER" />
        <arg name="expression" type="CHAR"/>
    </function>

    <!-- Misc -->
    <function name="decode" return-type="ANYDATA"
              validatorClass="com.deepsky.lang.plsql.resolver.validators.DECODEValidator">
    </function>
    <function name="userenv" return-type="VARCHAR">
        <arg name="PARAMETER" type="VARCHAR"/>
    </function>

    <function name="nvl" return-type="ANYDATA">
        <arg name="EXPRESSION" type="ANYDATA"/>
        <arg name="DEFAULT_EXPR" type="ANYDATA"/>
    </function>
    <function name="nvl2" return-type="ANYDATA">
        <arg name="EXPRESSION" type="ANYDATA"/>
        <arg name="DEFAULT_EXPR" type="ANYDATA"/>
        <arg name="DEFAULT_EXPR" type="ANYDATA"/>
    </function>

    <!-- Aggregate functions -->
    <function name="min" return-type="ANYDATA">
        <arg name="EXPRESSION" type="ANYDATA"/>
    </function>
    <function name="max" return-type="ANYDATA">
        <arg name="EXPRESSION" type="ANYDATA"/>
    </function>
    <function name="sum" return-type="NUMBER">
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>
    <function name="avg" return-type="NUMBER">
        <arg name="EXPRESSION" type="NUMBER"/>
    </function>

    <!-- Trigger specific functions -->
    <function name="INSERTING" return-type="BOOLEAN">
    </function>
    <function name="DELETING" return-type="BOOLEAN">
    </function>
    <function name="UPDATING" return-type="BOOLEAN">
    </function>

    <!-- LOB/BFILE specific functions -->
    <function name="empty_clob" return-type="CLOB"/>
    <function name="empty_blob" return-type="BLOB"/>
    <function name="BFILENAME" return-type="ANYDATA">
        <arg name="DIRNAME" type="CHAR"/>
        <arg name="FILENAME" type="CHAR"/>
    </function>

</function-list>