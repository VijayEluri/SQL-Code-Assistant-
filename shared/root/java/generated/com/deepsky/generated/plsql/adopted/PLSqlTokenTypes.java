// $ANTLR 2.7.5 (20050128): "/git_app/sqlassistant_super/github/shared/root/grammars/plsql_parser_ex.g" -> "PLSqlParserAdopted.java"$

package com.deepsky.generated.plsql.adopted;

public interface PLSqlTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int BAD_ML_COMMENT = 4;
	int BAD_CHARACTER = 5;
	int BAD_CHAR_LITERAL = 6;
	int BAD_NUMBER_LITERAL = 7;
	int STORAGE_SIZE = 8;
	int LT = 9;
	int LE = 10;
	int GE = 11;
	int NOT_EQ = 12;
	int CUSTOM_TOKEN = 13;
	int COLON_NEW = 14;
	int COLON_OLD = 15;
	int TABLE_NAME_SPEC = 16;
	int PLSQL_ENV_VAR = 17;
	int ANY_CHARACTER = 18;
	int IDENTIFIER = 19;
	int QUOTED_STR = 20;
	int DOUBLE_QUOTED_STRING = 21;
	int AT_PREFIXED = 22;
	int SEMI = 23;
	int COLON = 24;
	int DOT = 25;
	int COMMA = 26;
	int ASTERISK = 27;
	int OPEN_PAREN = 28;
	int CLOSE_PAREN = 29;
	int PLUS = 30;
	int MINUS = 31;
	int DIVIDE = 32;
	int BACKSLASH = 33;
	int EQ = 34;
	int PERCENTAGE = 35;
	int DOUBLEDOT = 36;
	int CONCAT = 37;
	int START_LABEL = 38;
	int DOLLAR = 39;
	int END_LABEL = 40;
	int ASSIGNMENT_EQ = 41;
	int PASS_BY_NAME = 42;
	int VERTBAR = 43;
	int GT = 44;
	int NUMBER = 45;
	int N = 46;
	int WS = 47;
	int LF = 48;
	int SL_COMMENT = 49;
	int ML_COMMENT = 50;
	int IF_COND_CMPL = 51;
	int THEN_COND_CMPL = 52;
	int ELSE_COND_CMPL = 53;
	int END_COND_CMPL = 54;
	int ERROR_COND_CMPL = 55;
	int START_RULE = 56;
	int ERROR_TOKEN_A = 57;
	int PACKAGE_SPEC = 58;
	int PACKAGE_BODY = 59;
	int PACKAGE_NAME = 60;
	int PACKAGE_OBJ_BODY = 61;
	int RECORD_TYPE_DECL = 62;
	int SELECT_EXPRESSION = 63;
	int SELECT_EXPRESSION_UNION = 64;
	int PLSQL_BLOCK = 65;
	int CURSOR_DECLARATION = 66;
	int VARIABLE_DECLARATION = 67;
	int PROCEDURE_BODY = 68;
	int FUNCTION_BODY = 69;
	int PARAMETER_SPEC = 70;
	int SQL_STATEMENT = 71;
	int IF_STATEMENT = 72;
	int LOOP_STATEMENT = 73;
	int STATEMENT = 74;
	int TABLE_REFERENCE_LIST = 75;
	int TABLE_REFERENCE_LIST_FROM = 76;
	int WHERE_CONDITION = 77;
	int SUBQUERY = 78;
	int SQL_IDENTIFIER = 79;
	int FUNCTION = 80;
	int GROUP_FUNCTION = 81;
	int USER_FUNCTION = 82;
	int MULTIPLY = 83;
	int ARGUMENT = 84;
	int ARGUMENT_LIST = 85;
	int FIELD_NAME = 86;
	int PLSQL_EXPR_LIST_USING = 87;
	int EXPR_LIST = 88;
	int DECLARE_LIST = 89;
	int FUNCTION_CALL = 90;
	int PACKAGE_INIT_SECTION = 91;
	int CALL_ARGUMENT_LIST = 92;
	int SPEC_CALL_ARGUMENT_LIST = 93;
	int CALL_ARGUMENT = 94;
	int BASE_EXRESSION = 95;
	int COLUMN_SPEC = 96;
	int LOGICAL_AND = 97;
	int LOGICAL_OR = 98;
	int CASE_EXPRESSION_SMPL = 99;
	int CASE_EXPRESSION_SRCH = 100;
	int CASE_STATEMENT = 101;
	int COUNT_FUNC = 102;
	int RANK_FUNCTION = 103;
	int LEAD_FUNCTION = 104;
	int LAG_FUNCTION = 105;
	int TRIM_FUNC = 106;
	int COLUMN_SPEC_LIST = 107;
	int INSERT_COMMAND = 108;
	int UPDATE_COMMAND = 109;
	int DELETE_COMMAND = 110;
	int MERGE_COMMAND = 111;
	int MERGE_WHEN_COMMAND = 112;
	int STRING_LITERAL = 113;
	int NUMERIC_LITERAL = 114;
	int BOOLEAN_LITERAL = 115;
	int RETURN_TYPE = 116;
	int TYPE_SPEC = 117;
	int VARIABLE_NAME = 118;
	int COLUMN_OUTER_JOIN = 119;
	int LOGICAL_FACTOR = 120;
	int TABLE_ALIAS = 121;
	int CAST_FUNC = 122;
	int VAR_REF = 123;
	int PLSQL_VAR_REF = 124;
	int PARAMETER_REF = 125;
	int EXCEPTION_SECTION = 126;
	int FETCH_STATEMENT = 127;
	int SELECTED_TABLE = 128;
	int CREATE_PROCEDURE = 129;
	int CREATE_FUNCTION = 130;
	int COMMIT_STATEMENT = 131;
	int ROLLBACK_STATEMENT = 132;
	int NULL_STATEMENT = 133;
	int ASSIGNMENT_STATEMENT = 134;
	int PROCEDURE_CALL = 135;
	int RETURN_STATEMENT = 136;
	int OBJECT_NAME = 137;
	int PARAMETER_NAME = 138;
	int DEFAULT = 139;
	int THEN_STATEMENT = 140;
	int ELSIF_STATEMENT = 141;
	int ELSE_STATEMENT = 142;
	int STATEMENT_LIST = 143;
	int RELATION_CONDITION = 144;
	int ISNULL_CONDITION = 145;
	int LIKE_CONDITION = 146;
	int BETWEEN_CONDITION = 147;
	int IN_CONDITION = 148;
	int PARENTHESIZED_EXPR = 149;
	int ORDER_CLAUSE = 150;
	int CONNECT_CLAUSE = 151;
	int GROUP_CLAUSE = 152;
	int INTO_CLAUSE = 153;
	int FOR_UPDATE_CLAUSE = 154;
	int ASTERISK1 = 155;
	int ROWCOUNT_EXRESSION = 156;
	int MULTIPLICATION_OP = 157;
	int DIVIDE_OP = 158;
	int PLUS_OP = 159;
	int MINUS_OP = 160;
	int CONCAT_OP = 161;
	int CURSOR_NAME = 162;
	int DATATYPE = 163;
	int EXTRACT_DATE_FUNC = 164;
	int ANSI_JOIN_TAB_SPEC = 165;
	int INTERVAL_DAY_TO_SEC_EXPR = 166;
	int INTERVAL_YEAR_TO_MONTH_EXPR = 167;
	int INTERVAL_CONST = 168;
	int USER_CONST = 169;
	int SYSDATE_CONST = 170;
	int SYSTIMESTAMP_CONST = 171;
	int CURRENT_TIMESTAMP_CONST = 172;
	int ALIAS_NAME = 173;
	int EXISTS_EXPR = 174;
	int SUBQUERY_EXPR = 175;
	int TYPE_NAME_REF = 176;
	int TYPE_NAME = 177;
	int SORTED_DEF = 178;
	int RAISE_STATEMENT = 179;
	int PACKAGE_OBJ_SPEC = 180;
	int PROCEDURE_SPEC = 181;
	int SIMPLE_UPDATE_COMMAND = 182;
	int SUBQUERY_UPDATE_COMMAND = 183;
	int IMMEDIATE_COMMAND = 184;
	int FUNCTION_SPEC = 185;
	int NEGATE_FACTOR = 186;
	int PRAGMA = 187;
	int TABLE_TYPE_REF = 188;
	int COLUMN_TYPE_REF = 189;
	int STATEMENT_ANNOT = 190;
	int ASTERISK_COLUMN = 191;
	int IDENT_ASTERISK_COLUMN = 192;
	int EXPR_COLUMN = 193;
	int TABLE_REF = 194;
	int TABLE_REF_WITH_LINK = 195;
	int FROM_SUBQUERY = 196;
	int FROM_PLAIN_TABLE = 197;
	int SCHEMA_NAME = 198;
	int COLUMN_NAME_REF = 199;
	int ARITHMETIC_EXPR = 200;
	int ASSIGNMENT_OP = 201;
	int DBTIMEZONE = 202;
	int SUBQUERY_CONDITION = 203;
	int RECORD_ITEM = 204;
	int EXCEPTION_DECL = 205;
	int EXCEPTION_PRAGMA = 206;
	int COMPLEX_NAME = 207;
	int RESTRICT_REF_PRAGMA = 208;
	int CHARACTER_SET = 209;
	int AUTHID = 210;
	int FIPSFLAG_PRAGMA = 211;
	int BUILTIN_PRAGMA = 212;
	int INTERFACE_PRAGMA = 213;
	int TIMESTAMPG_PRAGMA = 214;
	int TIMESTAMP_CONST = 215;
	int SUBTYPE_DECL = 216;
	int MEMBER_OF = 217;
	int SQLPLUS_SET = 218;
	int SQLPLUS_COMMAND = 219;
	int SQLPLUS_RUNSCRIPT = 220;
	int SQLPLUS_SHOW = 221;
	int SQLPLUS_DEFINE = 222;
	int SQLPLUS_VARIABLE = 223;
	int SQLPLUS_EXEC = 224;
	int SQLPLUS_WHENEVER = 225;
	int SQLPLUS_PROMPT = 226;
	int SQLPLUS_COLUMN = 227;
	int SQLPLUS_START = 228;
	int SQLPLUS_SERVEROUTPUT = 229;
	int SQLPLUS_REPFOOTER = 230;
	int SQLPLUS_REPHEADER = 231;
	int SQLPLUS_EXIT = 232;
	int SQLPLUS_QUIT = 233;
	int SQLPLUS_SPOOL = 234;
	int OR_LOGICAL = 235;
	int AND_LOGICAL = 236;
	int NOT_LOGICAL = 237;
	int LOGICAL_EXPR = 238;
	int RELATION_OP = 239;
	int SEQUENCE_EXPR = 240;
	int SEQUENCE_REF = 241;
	int ALIAS_IDENT = 242;
	int COLUMN_NAME_DDL = 243;
	int COLUMN_DEF = 244;
	int TABLE_DEF = 245;
	int TABLE_COLLECTION = 246;
	int VARRAY_COLLECTION = 247;
	int REF_CURSOR = 248;
	int OBJECT_TYPE_DEF = 249;
	int AT_TIME_ZONE_EXPR = 250;
	int TIMEZONE_SPEC = 251;
	int ALTER_TABLE = 252;
	int ALTER_GENERIC = 253;
	int CREATE_TEMP_TABLE = 254;
	int COMMENT = 255;
	int COMMENT_STR = 256;
	int CREATE_INDEX = 257;
	int INSERT_INTO_SUBQUERY_COMMAND = 258;
	int CONDITIONAL_COMPILATION = 259;
	int COND_COMP_SEQ = 260;
	int COND_COMP_SEQ2 = 261;
	int COND_COMP_ERROR = 262;
	int COLUMN_NAME_LIST = 263;
	int OWNER_COLUMN_NAME_LIST = 264;
	int SERIALLY_REUSABLE_PRAGMA = 265;
	int CREATE_VIEW = 266;
	int DATATYPE_PARAM_INFO = 267;
	int CREATE_VIEW_COLUMN_DEF = 268;
	int TABLE_FUNCTION = 269;
	int ROWNUM = 270;
	int ROWID = 271;
	int CUSTOM_AGGR_FUNCTION = 272;
	int LAST_STMT_RESULT_NUM = 273;
	int LAST_STMT_RESULT_BOOL = 274;
	int CURRENT_OF_CLAUSE = 275;
	int CURSOR_STATE = 276;
	int SQLCODE_SYSVAR = 277;
	int SQLERRM_SYSVAR = 278;
	int COLLECTION_METHOD_CALL = 279;
	int COLLECTION_METHOD_CALL2 = 280;
	int C_RECORD_ITEM_REF = 281;
	int CALLABLE_NAME_REF = 282;
	int TRUNCATE_TABLE = 283;
	int DROP_VIEW = 284;
	int DROP_TABLE = 285;
	int DROP_FUNCTION = 286;
	int DROP_PROCEDURE = 287;
	int DROP_PACKAGE = 288;
	int DROP_INDEX = 289;
	int DROP_SEQUENCE = 290;
	int DROP_TYPE = 291;
	int DROP_OPERATOR = 292;
	int DROP_SYNONYM = 293;
	int DROP_USER = 294;
	int DROP_ROLE = 295;
	int DROP_LIBRARY = 296;
	int DROP_DB_LINK = 297;
	int DROP_DIRECTORY = 298;
	int DROP_TRIGGER = 299;
	int CREATE_SYNONYM = 300;
	int SYNONYM_NAME = 301;
	int SYNONYM_OBJ = 302;
	int SYNONYM_OBJ_WITH_LINK = 303;
	int COLUMN_PK_SPEC = 304;
	int COLUMN_FK_SPEC = 305;
	int NOT_NULL_STMT = 306;
	int COLUMN_CHECK_CONSTRAINT = 307;
	int CONSTRAINT = 308;
	int PK_SPEC = 309;
	int FK_SPEC = 310;
	int UNIQUE_CONSTRAINT = 311;
	int CONSTRAINT_NAME = 312;
	int ADD_CONSTRAINT = 313;
	int ADD_PRIMARY_KEY = 314;
	int IOT_TYPE = 315;
	int HEAP_ORGINIZED = 316;
	int EXTERNAL_TYPE = 317;
	int NAME_FRAGMENT = 318;
	int EXEC_NAME_REF = 319;
	int COLLECTION_METHOD_NAME = 320;
	int V_COLUMN_DEF = 321;
	int TABLE_NAME_DDL = 322;
	int VIEW_NAME = 323;
	int INDEX_NAME = 324;
	int VIEW_NAME_DDL = 325;
	int CREATE_TRIGGER = 326;
	int CREATE_DIRECTORY = 327;
	int CREATE_DB_LINK = 328;
	int CREATE_SEQUENCE = 329;
	int TRIGGER_FOR_EACH = 330;
	int TRIGGER_NAME = 331;
	int ALTER_TRIGGER = 332;
	int DB_EVNT_TRIGGER_CLAUSE = 333;
	int DDL_TRIGGER_CLAUSE = 334;
	int DML_TRIGGER_CLAUSE = 335;
	int TRIGGER_COLUMN_REF = 336;
	int INSTEADOF_TRIGGER = 337;
	int TRIGGER_TARGET = 338;
	int FORALL_LOOP_SPEC = 339;
	int CURSOR_REF_LOOP_SPEC = 340;
	int CURSOR_LOOP_SPEC = 341;
	int CURSOR_LOOP_INDEX = 342;
	int NUM_LOOP_INDEX = 343;
	int NUMERIC_LOOP_SPEC = 344;
	int RECORD_ITEM_NAME = 345;
	int GOTO_STATEMENT = 346;
	int EXIT_STATEMENT = 347;
	int LABEL_NAME = 348;
	int PARTITION_SPEC = 349;
	int RANGE_PARTITION = 350;
	int HASH_PARTITION = 351;
	int CREATE_TABLESPACE = 352;
	int DROP_TABLESPACE = 353;
	int TABLESPACE_NAME = 354;
	int ALTER_TABLESPACE = 355;
	int CREATE_TYPE = 356;
	int BIND_VAR = 357;
	int RETURNING_CLAUSE = 358;
	int LITERAL_package = 359;
	int LITERAL_body = 360;
	int LITERAL_alter = 361;
	int LITERAL_drop = 362;
	int LITERAL_table = 363;
	int LITERAL_purge = 364;
	int LITERAL_view = 365;
	int LITERAL_cascade = 366;
	int LITERAL_constraints = 367;
	int LITERAL_function = 368;
	int LITERAL_procedure = 369;
	int LITERAL_index = 370;
	int LITERAL_force = 371;
	int LITERAL_sequence = 372;
	int LITERAL_type = 373;
	int LITERAL_validate = 374;
	int LITERAL_public = 375;
	int LITERAL_synonym = 376;
	int LITERAL_operator = 377;
	int LITERAL_user = 378;
	int LITERAL_role = 379;
	int LITERAL_directory = 380;
	int LITERAL_library = 381;
	int LITERAL_database = 382;
	int LITERAL_link = 383;
	int LITERAL_trigger = 384;
	int LITERAL_associate = 385;
	int LITERAL_statistics = 386;
	int LITERAL_with = 387;
	int LITERAL_column = 388;
	int LITERAL_functions = 389;
	int LITERAL_packages = 390;
	int LITERAL_types = 391;
	int LITERAL_indexes = 392;
	int LITERAL_indextypes = 393;
	int LITERAL_system = 394;
	int LITERAL_managed = 395;
	int LITERAL_storage = 396;
	int LITERAL_default = 397;
	int LITERAL_cost = 398;
	int LITERAL_selectivity = 399;
	int LITERAL_using = 400;
	int LITERAL_null = 401;
	int LITERAL_truncate = 402;
	int LITERAL_comment = 403;
	int LITERAL_on = 404;
	int LITERAL_is = 405;
	int LITERAL_sysdate = 406;
	int LITERAL_systimestamp = 407;
	int LITERAL_not = 408;
	int LITERAL_disable = 409;
	int LITERAL_enable = 410;
	int LITERAL_row = 411;
	int LITERAL_movement = 412;
	int LITERAL_primary = 413;
	int LITERAL_key = 414;
	int LITERAL_references = 415;
	int LITERAL_rely = 416;
	int LITERAL_constraint = 417;
	int LITERAL_check = 418;
	int LITERAL_set = 419;
	int LITERAL_long = 420;
	int LITERAL_show = 421;
	int LITERAL_var = 422;
	int LITERAL_variable = 423;
	int LITERAL_col = 424;
	int LITERAL_exec = 425;
	int LITERAL_execute = 426;
	int LITERAL_whenever = 427;
	int LITERAL_sqlerror = 428;
	int LITERAL_oserror = 429;
	int LITERAL_exit = 430;
	int LITERAL_continue = 431;
	int LITERAL_commit = 432;
	int LITERAL_rollback = 433;
	int LITERAL_none = 434;
	int LITERAL_def = 435;
	int LITERAL_define = 436;
	int LITERAL_prompt = 437;
	int LITERAL_rem = 438;
	int LITERAL_host = 439;
	int LITERAL_quit = 440;
	int LITERAL_spool = 441;
	int LITERAL_off = 442;
	int LITERAL_sta = 443;
	int LITERAL_start = 444;
	int LITERAL_repfooter = 445;
	int LITERAL_repheader = 446;
	int LITERAL_serveroutput = 447;
	int LITERAL_begin = 448;
	int LITERAL_declare = 449;
	int DOUBLE_DOT = 450;
	int LITERAL_create = 451;
	int LITERAL_or = 452;
	int LITERAL_replace = 453;
	int LITERAL_global = 454;
	int LITERAL_temporary = 455;
	int LITERAL_bigfile = 456;
	int LITERAL_smallfile = 457;
	int LITERAL_tablespace = 458;
	int LITERAL_tempfile = 459;
	int LITERAL_undo = 460;
	int LITERAL_datafile = 461;
	int LITERAL_next = 462;
	int LITERAL_maxsize = 463;
	int LITERAL_size = 464;
	int LITERAL_reuse = 465;
	int LITERAL_extent = 466;
	int LITERAL_management = 467;
	int LITERAL_local = 468;
	int LITERAL_uniform = 469;
	int LITERAL_dictionary = 470;
	int LITERAL_retention = 471;
	int LITERAL_guarantee = 472;
	int LITERAL_noguarantee = 473;
	int LITERAL_autoextend = 474;
	int LITERAL_group = 475;
	int LITERAL_logging = 476;
	int LITERAL_nologging = 477;
	int LITERAL_no = 478;
	int LITERAL_online = 479;
	int LITERAL_offline = 480;
	int LITERAL_normal = 481;
	int LITERAL_immediate = 482;
	int LITERAL_read = 483;
	int LITERAL_only = 484;
	int LITERAL_write = 485;
	int LITERAL_permanent = 486;
	int LITERAL_including = 487;
	int LITERAL_contents = 488;
	int LITERAL_and = 489;
	int LITERAL_datafiles = 490;
	int LITERAL_add = 491;
	int LITERAL_rename = 492;
	int LITERAL_to = 493;
	int LITERAL_end = 494;
	int LITERAL_backup = 495;
	int LITERAL_coalesce = 496;
	int LITERAL_minimum = 497;
	int LITERAL_maxvalue = 498;
	int LITERAL_minvalue = 499;
	int LITERAL_cycle = 500;
	int LITERAL_nocycle = 501;
	int LITERAL_cache = 502;
	int LITERAL_nocache = 503;
	int LITERAL_increment = 504;
	int LITERAL_by = 505;
	int LITERAL_order = 506;
	int LITERAL_noorder = 507;
	int LITERAL_for = 508;
	int LITERAL_connect = 509;
	int LITERAL_identified = 510;
	int LITERAL_after = 511;
	int LITERAL_before = 512;
	int LITERAL_startup = 513;
	int LITERAL_shutdown = 514;
	int LITERAL_servererror = 515;
	int LITERAL_logon = 516;
	int LITERAL_logoff = 517;
	int LITERAL_analyze = 518;
	int LITERAL_audit = 519;
	int LITERAL_noaudit = 520;
	int LITERAL_ddl = 521;
	int LITERAL_diassociate = 522;
	int LITERAL_grant = 523;
	int LITERAL_revoke = 524;
	int LITERAL_schema = 525;
	int LITERAL_instead = 526;
	int LITERAL_of = 527;
	int LITERAL_delete = 528;
	int LITERAL_insert = 529;
	int LITERAL_update = 530;
	int LITERAL_each = 531;
	int LITERAL_referencing = 532;
	int LITERAL_old = 533;
	int LITERAL_as = 534;
	int LITERAL_new = 535;
	int LITERAL_when = 536;
	int LITERAL_unique = 537;
	int LITERAL_bitmap = 538;
	int LITERAL_asc = 539;
	int LITERAL_desc = 540;
	int LITERAL_preserve = 541;
	int LITERAL_rows = 542;
	int LITERAL_compute = 543;
	int LITERAL_parallel = 544;
	int LITERAL_noparallel = 545;
	int LITERAL_filesystem_like_logging = 546;
	int LITERAL_compress = 547;
	int LITERAL_all = 548;
	int LITERAL_direct_load = 549;
	int LITERAL_operations = 550;
	int LITERAL_nocompress = 551;
	int LITERAL_pctfree = 552;
	int LITERAL_pctused = 553;
	int LITERAL_initrans = 554;
	int LITERAL_maxtrans = 555;
	int LITERAL_monitoring = 556;
	int LITERAL_nomonitoring = 557;
	int LITERAL_partition = 558;
	int LITERAL_range = 559;
	int LITERAL_interval = 560;
	int LITERAL_store = 561;
	int LITERAL_in = 562;
	int LITERAL_values = 563;
	int LITERAL_less = 564;
	int LITERAL_than = 565;
	int LITERAL_overflow = 566;
	int LITERAL_hash = 567;
	int LITERAL_partitions = 568;
	int LITERAL_novalidate = 569;
	int LITERAL_organization = 570;
	int LITERAL_pctthreshold = 571;
	int LITERAL_heap = 572;
	int LITERAL_external = 573;
	int LITERAL_degree = 574;
	int LITERAL_instances = 575;
	int LITERAL_reject = 576;
	int LITERAL_limit = 577;
	int LITERAL_unlimited = 578;
	int LITERAL_initial = 579;
	int LITERAL_minextents = 580;
	int LITERAL_maxextents = 581;
	int LITERAL_pctincrease = 582;
	int LITERAL_freelists = 583;
	int LITERAL_freelist = 584;
	int LITERAL_groups = 585;
	int LITERAL_optimal = 586;
	int LITERAL_buffer_pool = 587;
	int LITERAL_keep = 588;
	int LITERAL_recycle = 589;
	int LITERAL_encrypt = 590;
	int LITERAL_foreign = 591;
	int LITERAL_restrict = 592;
	int LITERAL_action = 593;
	int LITERAL_modify = 594;
	int LITERAL_sort = 595;
	int LITERAL_nosort = 596;
	int LITERAL_reverse = 597;
	int LITERAL_visible = 598;
	int LITERAL_novisible = 599;
	int LITERAL_under = 600;
	int LITERAL_final = 601;
	int LITERAL_object = 602;
	int LITERAL_record = 603;
	int LITERAL_ref = 604;
	int LITERAL_cursor = 605;
	int LITERAL_return = 606;
	int LITERAL_rowtype = 607;
	int LITERAL_varray = 608;
	int LITERAL_option = 609;
	// "view_column_def_$internal$" = 610
	int LITERAL_timestamp = 611;
	int LITERAL_authid = 612;
	int LITERAL_wrapped = 613;
	int LITERAL_pragma = 614;
	int LITERAL_restrict_references = 615;
	int LITERAL_interface = 616;
	int LITERAL_builtin = 617;
	int LITERAL_fipsflag = 618;
	int LITERAL_exception_init = 619;
	int LITERAL_constant = 620;
	int LITERAL_subtype = 621;
	int LITERAL_loop = 622;
	int LITERAL_while = 623;
	int LITERAL_forall = 624;
	int LITERAL_if = 625;
	int LITERAL_goto = 626;
	int LITERAL_raise = 627;
	int LITERAL_case = 628;
	int LITERAL_select = 629;
	int LITERAL_merge = 630;
	int LITERAL_lock = 631;
	int LITERAL_open = 632;
	int LITERAL_close = 633;
	int LITERAL_fetch = 634;
	int LITERAL_sql = 635;
	int LITERAL_found = 636;
	int LITERAL_notfound = 637;
	int LITERAL_rowcount = 638;
	int LITERAL_isopen = 639;
	int LITERAL_bulk_rowcount = 640;
	int LITERAL_bulk_exceptions = 641;
	int LITERAL_error_index = 642;
	int LITERAL_error_code = 643;
	int LITERAL_count = 644;
	int LITERAL_then = 645;
	int LITERAL_else = 646;
	int LITERAL_autonomous_transaction = 647;
	int LITERAL_prior = 648;
	int LITERAL_number = 649;
	int LITERAL_binary_integer = 650;
	int LITERAL_natural = 651;
	int LITERAL_positive = 652;
	int LITERAL_char = 653;
	int LITERAL_byte = 654;
	int LITERAL_raw = 655;
	int LITERAL_boolean = 656;
	int LITERAL_date = 657;
	int LITERAL_time = 658;
	int LITERAL_zone = 659;
	int LITERAL_year = 660;
	int LITERAL_month = 661;
	int LITERAL_day = 662;
	int LITERAL_second = 663;
	int LITERAL_smallint = 664;
	int LITERAL_real = 665;
	int LITERAL_numeric = 666;
	int CLOSE_PAREPlSqlPlllN = 667;
	int LITERAL_int = 668;
	int LITERAL_integer = 669;
	int LITERAL_pls_integer = 670;
	int LITERAL_double = 671;
	int LITERAL_precision = 672;
	int LITERAL_float = 673;
	int LITERAL_decimal = 674;
	int LITERAL_varchar = 675;
	// "varchar2" = 676
	int LITERAL_nvarchar = 677;
	// "nvarchar2" = 678
	int LITERAL_character = 679;
	int LITERAL_rowid = 680;
	int LITERAL_blob = 681;
	int LITERAL_clob = 682;
	int LITERAL_nclob = 683;
	int LITERAL_bfile = 684;
	int LITERAL_out = 685;
	int LITERAL_nocopy = 686;
	int LITERAL_any_cs = 687;
	int LITERAL_charset = 688;
	int LITERAL_exception = 689;
	int LITERAL_serially_reusable = 690;
	int LITERAL_language = 691;
	int LITERAL_java = 692;
	int LITERAL_name = 693;
	int LITERAL_pipelined = 694;
	int LITERAL_parallel_enable = 695;
	int LITERAL_deterministic = 696;
	int LITERAL_save = 697;
	int LITERAL_exceptions = 698;
	int LITERAL_indices = 699;
	int LITERAL_true = 700;
	int LITERAL_false = 701;
	// "**" = 702
	int LITERAL_at = 703;
	int LITERAL_current = 704;
	int LITERAL_exists = 705;
	int LITERAL_like = 706;
	int LITERAL_escape = 707;
	int LITERAL_between = 708;
	int LITERAL_member = 709;
	int LITERAL_sqlcode = 710;
	int LITERAL_sqlerrm = 711;
	int LITERAL_cast = 712;
	int LITERAL_trim = 713;
	int LITERAL_multiset = 714;
	int LITERAL_lag = 715;
	int LITERAL_lead = 716;
	int LITERAL_rank = 717;
	int LITERAL_dense_rank = 718;
	int LITERAL_extract = 719;
	int LITERAL_minute = 720;
	int LITERAL_hour = 721;
	int LITERAL_any = 722;
	int LITERAL_nextval = 723;
	int LITERAL_currval = 724;
	int LITERAL_over = 725;
	int LITERAL_sessiontimezone = 726;
	int LITERAL_dbtimezone = 727;
	int LITERAL_distinct = 728;
	int LITERAL_from = 729;
	int LITERAL_timezone_hour = 730;
	int LITERAL_timezone_minute = 731;
	int LITERAL_timezone_region = 732;
	int LITERAL_timezone_abbr = 733;
	int LITERAL_work = 734;
	int LITERAL_elsif = 735;
	int LITERAL_union = 736;
	int LITERAL_intersect = 737;
	int LITERAL_minus = 738;
	int LITERAL_bulk = 739;
	int LITERAL_collect = 740;
	int LITERAL_into = 741;
	int LITERAL_session = 742;
	int LITERAL_flush = 743;
	int LITERAL_shared_pool = 744;
	int LITERAL_reset = 745;
	int LITERAL_sid = 746;
	int LITERAL_left = 747;
	int LITERAL_right = 748;
	int LITERAL_inner = 749;
	int LITERAL_outer = 750;
	int LITERAL_join = 751;
	int LITERAL_full = 752;
	int LITERAL_where = 753;
	int LITERAL_leading = 754;
	int LITERAL_trailing = 755;
	int LITERAL_both = 756;
	int LITERAL_current_timestamp = 757;
	int LITERAL_rownum = 758;
	int LITERAL_the = 759;
	int LITERAL_having = 760;
	int LITERAL_nulls = 761;
	int LITERAL_first = 762;
	int LITERAL_last = 763;
	int LITERAL_nowait = 764;
	int LITERAL_wait = 765;
	int LITERAL_matched = 766;
	int LITERAL_returning = 767;
	int LITERAL_transaction = 768;
	int LITERAL_mode = 769;
	int LITERAL_share = 770;
	int LITERAL_exclusive = 771;
	int LITERAL_savepoint = 772;
	int LITERAL_aggregate = 773;
	int LITERAL_records = 774;
	int LITERAL_parameters = 775;
	int LITERAL_access = 776;
	int LITERAL_newline = 777;
	int LITERAL_delimited = 778;
	int LITERAL_fixed = 779;
	int LITERAL_characterset = 780;
	int LITERAL_big = 781;
	int LITERAL_little = 782;
	int LITERAL_endian = 783;
	int LITERAL_mark = 784;
	int LITERAL_nocheck = 785;
	int LITERAL_string = 786;
	int LITERAL_sizes = 787;
	int LITERAL_bytes = 788;
	int LITERAL_load = 789;
	int LITERAL_nobadfile = 790;
	int LITERAL_badfile = 791;
	int LITERAL_nodiscardfile = 792;
	int LITERAL_discardfile = 793;
	int LITERAL_nologfile = 794;
	int LITERAL_logfile = 795;
	int LITERAL_readsize = 796;
	int LITERAL_skip = 797;
	int LITERAL_data_cache = 798;
	int LITERAL_fields = 799;
	int LITERAL_missing = 800;
	int LITERAL_field = 801;
	int LITERAL_lrtrim = 802;
	int LITERAL_notrim = 803;
	int LITERAL_ltrim = 804;
	int LITERAL_rtrim = 805;
	int LITERAL_ldtrim = 806;
	int LITERAL_position = 807;
	int LITERAL_enclosed = 808;
	int LITERAL_date_format = 809;
	int LITERAL_varraw = 810;
	int LITERAL_varcharc = 811;
	int LITERAL_varrawc = 812;
	int LITERAL_oracle_number = 813;
	int LITERAL_oracle_date = 814;
	int LITERAL_counted = 815;
	int LITERAL_zoned = 816;
	int LITERAL_unsigned = 817;
	int LITERAL_location = 818;
	int LITERAL_concat = 819;
	int LITERAL_lobfile = 820;
	int LITERAL_preprocessor = 821;
	int LITERAL_compression = 822;
	int LITERAL_enabled = 823;
	int LITERAL_disabled = 824;
	int LITERAL_encryption = 825;
	int LITERAL_version = 826;
	int LITERAL_compatible = 827;
	int LITERAL_data = 828;
	int LITERAL_mask = 829;
	int LITERAL_terminated = 830;
	int LITERAL_whitespace = 831;
	int LITERAL_optionally = 832;
	int LITERAL_timezone = 833;
	int LITERAL_transforms = 834;
	int LITERAL_oracle_loader = 835;
	int LITERAL_oracle_datapump = 836;
	int LITERAL_latest = 837;
	int LITERAL_characters = 838;
	int LITERAL_are = 839;
	int LITERAL_ldrtrim = 840;
}
